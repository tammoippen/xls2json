
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    tags: [ "v*" ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  sample-job:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            gu-binary: gu
          - os: macos-latest
            gu-binary: gu
          - os: windows-latest
            gu-binary: gu.cmd
    steps:
      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@master
        with:
          # GraalVM version, no pattern syntax available atm
          graalvm: '21.1.0'
          # Java version, optional, defaults to 'java8'. Available options are 'java8' and 'java11'.
          java: 'java11'
          # Architecture flag, optional, defaults to 'amd64'. Available options are 'amd64' and 'aarch64'. Later is available only for linux runners.
          arch: 'amd64'

      - name: Checkout
        uses: actions/checkout@v2

      - uses: burrunan/gradle-cache-action@v1
        name: Build xls2json
        with:
          # RUNNER_OS is added to job-id automatically
          job-id: jdk11
          arguments: spotlessCheck build jacocoTestReport
          gradle-distribution-sha-256-sum-warning: false

      - uses: codecov/codecov-action@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests

      - name: Store distributions and libs
        uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          name: dists-and-libs
          retention-days: 14
          path: |
            build/distributions
            build/libs

      - name: Upload JVM parts to release
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        run: |
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          version=$(echo -n ${{github.ref}} | cut -c12-)
          tag=$(echo -n ${{github.ref}} | cut -c11-)
          gh release upload $tag build/libs/xls2json-$version-all.jar \
                                 build/distributions/xls2json-$version.tar \
                                 build/distributions/xls2json-$version.zip

      # only build native image when releasing a tag
      - uses: ilammy/msvc-dev-cmd@v1
        if: startsWith(github.ref, 'refs/tags/')

      - name: Install native-image component
        if: startsWith(github.ref, 'refs/tags/')
        run: ${{ matrix.gu-binary }} install native-image

      - name: Build native-image executable
        if: startsWith(github.ref, 'refs/tags/')
        run: ./gradlew nativeImage

      - name: Store native-image executable
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v2
        with:
          name: executable-${{ matrix.os }}
          retention-days: 14
          path: build/executable

      - name: Upload native parts to release (unix)
        if: startsWith(github.ref, 'refs/tags/') && matrix.os != 'windows-latest'
        run: |
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          version=$(echo -n ${{github.ref}} | cut -c12-)
          tag=$(echo -n ${{github.ref}} | cut -c11-)
          cp build/executable/xls2json xls2json-${{runner.os}}-amd64-$version
          gh release upload $tag xls2json-${{runner.os}}-amd64-$version

      - name: Upload native parts to release (windows)
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'windows-latest'
        run: |
          $env:GITHUB_TOKEN = '${{ secrets.GITHUB_TOKEN }}'
          $version='${{github.ref}}'.substring(11)
          $tag='${{github.ref}}'.substring(10)
          Compress-Archive -Path build/executable/ -DestinationPath xls2json-${{runner.os}}-amd64-$version.zip
          gh release upload $tag xls2json-${{runner.os}}-amd64-$version.zip
